## 06.12 강의
- cookie
Http의 특성
무상태성 - stateless
무연결 - connectless

로그인할 때 세션을 주로 사용함

각 디바이스별로 (웹, 모바일 등등) 서블릿(컨트롤러)을 따로 만들어야했지만 json(key밸류 방식)이라는 하나의 컨트롤러를 이용 -> RestAPI
RestAPI = 멀티 디바이스용을 만들기 유용함 
- cookie
Http의 특성
무상태성 - stateless
무연결 - connectless

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6005a28a-75fb-4cc2-9fe8-adab1de61152/Untitled.png)

로그인할 때 세션을 주로 사용함

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f881a5ac-2382-44a4-a590-3f7710cbd5c3/Untitled.png)

각 디바이스별로 (웹, 모바일 등등) 서블릿(컨트롤러)을 따로 만들어야했지만 json(key밸류 방식)이라는 하나의 컨트롤러를 이용 -> RestAPI
RestAPI = 멀티 디바이스용을 만들기 유용함

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/396983d5-12bc-494f-a903-c1485126fa71/Untitled.png)

부하가 걸린다 = 트래픽이 몰린다 → 서버가 버티기 힘들어짐

- 해결 방법
1. 서버 성능 업그레이드 = 스케일업
2. 서버 증설 = 스케일 아웃

단일화 시켜줄 로드 밸런서가 필요함 → 라운드로빈 방식을 활용 (한 번씩 나눠서)

로드 밸런서 = 트래픽을 분산시켜주는 행위

세션은 서버마다 존재, 세션을 이용하면 서버마다 세션이 있어서 번거로움

세션들을 동기화할 수 있게끔 공유시키는 기법 = 세션 클러스트링

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f35726a6-5dc6-4f0a-9b49-a9ea3bee3497/Untitled.png)

토큰 - 클라이언트에 저장

토큰 방식의 로그인 - 토큰을 데이터베이스에 보냄(만료인지 아닌지 확인)

단점

1. 보안에 취약함 - 만료시간을 설정해야함(털려도 되는 정보만 입력)

액세스토큰 = 출입증

리프레쉬 토큰 = 인사카드?

무상태성을 유지하려면 토큰 방식을 이용

JWT(토큰 발행 방법 중 하나)

제 3자 인증 방식 = OAuth?(구글이나 카카오로 로그인) - 보안이 좋음(어려움..)

트레이드 오프?

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1781b1ad-fbf1-4d72-8c67-62888d63fe42/Untitled.png)

필터 

- 서블릿 요청 동작을 할 수 있게 해주는 기능?
- 패턴 형식
- /*로 여러개 중첩 = 필터 체이닝(filter chaining)

Spring Security - 로그인 인증, 인가에 사용

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/84c8d384-dff2-48e1-9510-21a8500fa803/Untitled.png)

JSP - JavaServerPage의 약자

- /jsp/… 절대경로 - 루트 위치부 찾을 때
- jsp/… 상대경 - 가장 뒷부분에서부터 찾을 때

JSP컨테이너(서블릿 컨테이너가 관리) - jsp를 서블릿으로 만들어줌 → translation한다고 함

서블릿컨테이너를 조작하기 위한 것이 컨텍스

자바를 jvm이 이해할 수 있는 클래스로 만들어주는 것이 컴파일

jsp는 트랜슬레이션, 컴파일, 런으로 실행?

HTML 주석은 클라이언트에게 노출

JSP는 X (파일 형태에서만 보)

jsp는 뷰 역할, 컨트롤러는 서블릿 역할

jsp태그 알아두기